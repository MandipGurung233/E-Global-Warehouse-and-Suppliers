/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.AppliancesInfo;

import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author dell
 */
public class AppliancesInfo extends javax.swing.JFrame {

    /**
     * Creates new form AppliancesInfo
     */
    private String combo_bx = "Speaker";
    private String combo_bx1 = "Laptop";
    private String rad_btn = "Low (Six Months)";
    private String Files;
    private int save = -1;
    private final ArrayList<POJO_class> list = new ArrayList();
   
    
    
    public AppliancesInfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_grp = new javax.swing.ButtonGroup();
        pnl1 = new javax.swing.JPanel();
        btn5 = new javax.swing.JButton();
        pnl2 = new javax.swing.JPanel();
        lbl1 = new javax.swing.JLabel();
        lbl2 = new javax.swing.JLabel();
        lbl3 = new javax.swing.JLabel();
        lbl4 = new javax.swing.JLabel();
        lbl5 = new javax.swing.JLabel();
        lbl6 = new javax.swing.JLabel();
        lbl7 = new javax.swing.JLabel();
        lbl11 = new javax.swing.JLabel();
        txt1 = new javax.swing.JTextField();
        txt2 = new javax.swing.JTextField();
        txt3 = new javax.swing.JTextField();
        txt4 = new javax.swing.JTextField();
        txt5 = new javax.swing.JTextField();
        rad1 = new javax.swing.JRadioButton();
        rad2 = new javax.swing.JRadioButton();
        rad3 = new javax.swing.JRadioButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        com_box = new javax.swing.JComboBox<>();
        pnl3 = new javax.swing.JPanel();
        lbl8 = new javax.swing.JLabel();
        lbl9 = new javax.swing.JLabel();
        lbl10 = new javax.swing.JLabel();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        txt6 = new javax.swing.JTextField();
        btn6 = new javax.swing.JButton();
        com_box1 = new javax.swing.JComboBox<>();
        pnl4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl1 = new javax.swing.JTable();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        menuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        itm6 = new javax.swing.JMenuItem();
        sep4 = new javax.swing.JPopupMenu.Separator();
        itm1 = new javax.swing.JMenuItem();
        Sep1 = new javax.swing.JPopupMenu.Separator();
        itm2 = new javax.swing.JMenuItem();
        Sep2 = new javax.swing.JPopupMenu.Separator();
        itm3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        itm4 = new javax.swing.JMenuItem();
        sep3 = new javax.swing.JPopupMenu.Separator();
        itm5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("E - Global Information System");
        setLocation(new java.awt.Point(30, 0));
        setResizable(false);

        pnl1.setBackground(new java.awt.Color(204, 255, 204));
        pnl1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "E - Global Information System", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Tahoma", 0, 18))); // NOI18N
        pnl1.setPreferredSize(new java.awt.Dimension(1260, 600));

        btn5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn5.setText("Exit");
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        pnl2.setBackground(new java.awt.Color(204, 255, 204));
        pnl2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbl1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl1.setText("Gadget ID:");

        lbl2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl2.setText("Gadget Name:");

        lbl3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl3.setText("Category:");

        lbl4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl4.setText("Warranty:");

        lbl5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl5.setText("Quantity:");

        lbl6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl6.setText("Price(NPR):");

        lbl7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl7.setText("Discount (%):");

        lbl11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl11.setText("Please Fill Up All The Details");

        txt5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt5ActionPerformed(evt);
            }
        });
        txt5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt5KeyTyped(evt);
            }
        });

        rad1.setBackground(new java.awt.Color(204, 255, 204));
        btn_grp.add(rad1);
        rad1.setSelected(true);
        rad1.setText("Low (Six Months)");
        rad1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rad1ActionPerformed(evt);
            }
        });

        rad2.setBackground(new java.awt.Color(204, 255, 204));
        btn_grp.add(rad2);
        rad2.setText("Medium (one year)");
        rad2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rad2ActionPerformed(evt);
            }
        });

        rad3.setBackground(new java.awt.Color(204, 255, 204));
        btn_grp.add(rad3);
        rad3.setText("High (two year)");
        rad3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rad3ActionPerformed(evt);
            }
        });

        btn3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn3.setText("Add to table");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn4.setText("Clear");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        com_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Speaker", "Mobile", "Laptop", "Micro Oven", "Air Conditioner" }));

        javax.swing.GroupLayout pnl2Layout = new javax.swing.GroupLayout(pnl2);
        pnl2.setLayout(pnl2Layout);
        pnl2Layout.setHorizontalGroup(
            pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnl2Layout.createSequentialGroup()
                        .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl3)
                            .addComponent(lbl1)
                            .addComponent(lbl2)
                            .addComponent(lbl6)
                            .addComponent(lbl7)
                            .addComponent(lbl4)
                            .addComponent(lbl5))
                        .addGap(37, 37, 37)
                        .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rad2)
                            .addComponent(rad3)
                            .addComponent(txt4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txt1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(rad1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(com_box, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(pnl2Layout.createSequentialGroup()
                        .addComponent(lbl11)
                        .addGap(8, 8, 8)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnl2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(btn3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        pnl2Layout.setVerticalGroup(
            pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl2Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(lbl11)
                .addGap(25, 25, 25)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl1))
                .addGap(25, 25, 25)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl2))
                .addGap(26, 26, 26)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl3)
                    .addComponent(com_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rad1)
                    .addComponent(lbl4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rad2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rad3)
                .addGap(25, 25, 25)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl5)
                    .addComponent(txt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl6))
                .addGap(25, 25, 25)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl7))
                .addGap(30, 30, 30)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn3)
                    .addComponent(btn4))
                .addGap(30, 30, 30))
        );

        pnl3.setBackground(new java.awt.Color(204, 255, 204));
        pnl3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbl8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl8.setText("  Price of Item:");

        lbl9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl9.setText("Category:");

        lbl10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl10.setText("Search Button");

        btn1.setBackground(new java.awt.Color(255, 255, 255));
        btn1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn1.setText("Search Appliances");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn2.setText("Search available quantity");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn6.setText("Clear");
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        com_box1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Laptop", "Mobile", "Speaker", "Micro Oven", "Air Conditioner" }));

        javax.swing.GroupLayout pnl3Layout = new javax.swing.GroupLayout(pnl3);
        pnl3.setLayout(pnl3Layout);
        pnl3Layout.setHorizontalGroup(
            pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn1)
                    .addGroup(pnl3Layout.createSequentialGroup()
                        .addComponent(lbl8, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(txt6, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(53, 53, 53)
                .addComponent(lbl9)
                .addGap(31, 31, 31)
                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn2)
                    .addComponent(com_box1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(121, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl3Layout.createSequentialGroup()
                        .addComponent(lbl10)
                        .addGap(298, 298, 298))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl3Layout.createSequentialGroup()
                        .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))))
        );
        pnl3Layout.setVerticalGroup(
            pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(com_box1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn1)
                    .addComponent(btn2))
                .addGap(18, 18, 18)
                .addComponent(btn6)
                .addGap(14, 14, 14))
        );

        pnl4.setBackground(new java.awt.Color(204, 255, 204));
        pnl4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Data Form", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        tbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Gadget ID", "Gadget Name", "Category", "Warranty", "Quantity", "Price (NPR)", "Discount (%)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl1);

        btn7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn7.setText("Clear table");
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn8.setText("Delete data");
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl4Layout = new javax.swing.GroupLayout(pnl4);
        pnl4.setLayout(pnl4Layout);
        pnl4Layout.setHorizontalGroup(
            pnl4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnl4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(153, 153, 153))
        );
        pnl4Layout.setVerticalGroup(
            pnl4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(pnl4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn7)
                    .addComponent(btn8))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout pnl1Layout = new javax.swing.GroupLayout(pnl1);
        pnl1.setLayout(pnl1Layout);
        pnl1Layout.setHorizontalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl1Layout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addComponent(pnl2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(pnl3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnl4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60))))
        );
        pnl1Layout.setVerticalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnl2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addComponent(pnl4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(pnl3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btn5)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        menuBar1.setBackground(new java.awt.Color(204, 255, 204));

        jMenu1.setText("File");

        itm6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        itm6.setText("open");
        itm6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm6ActionPerformed(evt);
            }
        });
        jMenu1.add(itm6);
        jMenu1.add(sep4);

        itm1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        itm1.setText("loadToForm");
        itm1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm1ActionPerformed(evt);
            }
        });
        jMenu1.add(itm1);
        jMenu1.add(Sep1);

        itm2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        itm2.setText("Save");
        itm2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm2ActionPerformed(evt);
            }
        });
        jMenu1.add(itm2);
        jMenu1.add(Sep2);

        itm3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        itm3.setText("Exit");
        itm3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm3ActionPerformed(evt);
            }
        });
        jMenu1.add(itm3);

        menuBar1.add(jMenu1);

        jMenu2.setText("Help");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        itm4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        itm4.setText("FAQ");
        itm4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm4ActionPerformed(evt);
            }
        });
        jMenu2.add(itm4);
        jMenu2.add(sep3);

        itm5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        itm5.setText("userManual");
        itm5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm5ActionPerformed(evt);
            }
        });
        jMenu2.add(itm5);

        menuBar1.add(jMenu2);

        setJMenuBar(menuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl1, javax.swing.GroupLayout.DEFAULT_SIZE, 1299, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl1, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itm1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm1ActionPerformed
       // code for loadToTable (import)
        try {
            JFileChooser choosed = new JFileChooser();
            choosed.setDialogTitle("Select file to loadToTable");
            FileNameExtensionFilter filter_1 = new javax.swing.filechooser.FileNameExtensionFilter("Text Files", "txt");
            FileNameExtensionFilter filter_2 = new javax.swing.filechooser.FileNameExtensionFilter("CSV File", "csv");
            choosed.setFileFilter(filter_1);
            choosed.setFileFilter(filter_2);
            int userChoosed = choosed.showOpenDialog(null);
            File files = choosed.getSelectedFile();
            try{
                if (userChoosed == JFileChooser.APPROVE_OPTION){
                    Files = files.getAbsolutePath();                  
                    Files = Files.replace ('\\', '/') ;                                                      
                    } 
                
            }catch (Exception e){
                JOptionPane.showMessageDialog(rootPane, "File is not found","Error",0);
            }
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "No file has been selected !!","Error",0);
        }             
        
        try {
                      
                      try{
                               BufferedReader b = new BufferedReader(new FileReader(Files));                            
                               String row = "";                     
                               Files = ""; 
                              
                               save = -1;
                               //int q = 0;
                               while ((row = b.readLine()) != null){ 

                                    String [] values = row.split(",");
                                    String number = values[0];
                                    String number1 = values[1];
                                    String number2 = values[2];
                                    String number3 = values[3];
                                    String number4 = values[4];
                                    String number5 = values[5];
                                    String number6 = values[6];
                                    for(POJO_class a: list){
                                      if(number.equals(a.getNum1())){
                                        JOptionPane.showMessageDialog(rootPane,"Error could not load all data of the file"+"\n"+"The entered ID for "+a.getNum2()+"\n"+"matches with Gadget ID of "+number1+"\n"+" in the loaded file"+"\n"+"Please change the Gadget ID of the entered Gadget to load all the data of the file","Error",0);
                                        return;
                                      } 
                                    }
                                    
                                    POJO_class obj = new POJO_class(number,number1,number2, number3, number4, Integer.parseInt(number5), number6);
                                    list.add(obj);
                                    sort(list);
                                    int j = 0;     
                                    for (POJO_class s:list){
                                       String value[] = {s.getNum1(),s.getNum2(),s.getCombo_bx(),s.getRad_btn(),s.getNum3(),Integer.toString(s.getNum4()),s.getNum5()};
                                       int colCounts = tbl1.getColumnCount();
                                       for (int i = 0; i < colCounts; i++)
                                              tbl1.setValueAt(value[i],j,i);                   
                                       j++;
                                    }
                                    
                                     
                               }
                        } catch(IOException ex){                            
                                
                        }
                        
                    
            } catch (Exception e) {            
                      
            }                                                                               
    }//GEN-LAST:event_itm1ActionPerformed

    private void rad1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rad1ActionPerformed
        // TODO add your handling code here:
        rad_btn = "Low (Six Months)";
      
    }//GEN-LAST:event_rad1ActionPerformed

    private void rad2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rad2ActionPerformed
        // TODO add your handling code here:
        rad_btn = "Medium (one year)";
    }//GEN-LAST:event_rad2ActionPerformed

    private void rad3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rad3ActionPerformed
        // TODO add your handling code here:
        rad_btn = "High (two year)";
    }//GEN-LAST:event_rad3ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        // TODO add your handling code here:
        // code for add item
      try{
        try {
            
            String num1 = txt1.getText().trim();
            String num2 = txt2.getText().trim();
            String num3 = txt3.getText().trim();
            String num4 = txt4.getText().trim();
            String num5 = txt5.getText().trim();
            String combo_bx = (String) com_box.getSelectedItem();
                       
            int rowCount = tbl1.getRowCount();
            int nextRow = 0;
            boolean emptyRowFlag = false;
            String p;
            
            if (!num1.isEmpty() && !num2.isEmpty() && !num3.isEmpty() && !num3.isEmpty() && !num4.isEmpty() && !num5.isEmpty())
            {           
               int num_3 = Integer.parseInt(num3);
               int num_4 = Integer.parseInt(num4);
               int num_5 = Integer.parseInt(num5);
               if (num_3>0 && num_4>0 && num_5>0){
                
                if(Pattern.compile("Speaker").matcher(combo_bx).matches()){                   
                    if(Pattern.compile("sp[0-9]{3}").matcher(num1).matches()){
                      for(POJO_class a: list){
                        if(num1.equals(a.getNum1())){
                            JOptionPane.showMessageDialog(rootPane,"This ID is not unique as this belongs to: "+a.getNum2(),"Error",0);
                            return;
                        }
                      }                       
                    } else {
                        JOptionPane.showMessageDialog(rootPane,"Error..ID of Speaker must start with sp followed by three digit !!","Error",0);
                        return;
                    }                   
                } 
                
                if(Pattern.compile("Mobile").matcher(combo_bx).matches()){
                    if(Pattern.compile("mo[0-9]{3}").matcher(num1).matches()){
                      for(POJO_class a: list){
                        if(num1.equals(a.getNum1())){
                            JOptionPane.showMessageDialog(rootPane,"This ID is not unique as this belongs to: "+a.getNum2(),"Error",0);
                            return;
                        }
                      }                       
                    } else {
                        JOptionPane.showMessageDialog(rootPane,"Error..ID of Mobile must start with mo followed by three digit !!","Error",0);
                        return;
                    }
                }
                     
            
                if(Pattern.compile("Laptop").matcher(combo_bx).matches()){
                    if(Pattern.compile("la[0-9]{3}").matcher(num1).matches()){
                      for(POJO_class a: list){
                        if(num1.equals(a.getNum1())){
                            JOptionPane.showMessageDialog(rootPane,"This ID is not unique as this belongs to: "+a.getNum2(),"Error",0);
                            return;
                        }
                      }                       
                    } else {
                        JOptionPane.showMessageDialog(rootPane,"Error..ID of Laptop must start with la followed by three digit !!","Error",0);
                        return;
                    }
                }
                
                if(Pattern.compile("Micro Oven").matcher(combo_bx).matches()){
                    if(Pattern.compile("mi[0-9]{3}").matcher(num1).matches()){
                      for(POJO_class a: list){
                        if(num1.equals(a.getNum1())){
                            JOptionPane.showMessageDialog(rootPane,"This ID is not unique as this belongs to: "+a.getNum2(),"Error",0);
                            return;
                        }
                      }                       
                    } else {
                        JOptionPane.showMessageDialog(rootPane,"Error..ID of Micro oven must start with mo followed by three digit !!","Error",0);
                        return;
                    }
                }
                
                if(Pattern.compile("Air Conditioner").matcher(combo_bx).matches()){
                    if(Pattern.compile("ai[0-9]{3}").matcher(num1).matches()){
                      for(POJO_class a: list){
                        if(num1.equals(a.getNum1())){
                            JOptionPane.showMessageDialog(rootPane,"This ID is not unique as this belongs to: "+a.getNum2(),"Error",0);
                            return;
                        }
                      }                       
                    } else {
                        JOptionPane.showMessageDialog(rootPane,"Error..ID of Air Conditioner must start with ai followed by three digit !!","Error",0);
                        return;
                    }
                }
                                               
                if ( rad_btn == "Low (Six Months)"){
                    if(!(num_4 <= 50000)){
                        JOptionPane.showMessageDialog(rootPane,"Device price must not be above 50,000\n When Warranty is Low!!","Error",0);
                        return;
                    }
                } else if (rad_btn == "Medium (one year)"){
                    if(!(num_4 > 50000 && num_4 <= 100000)){
                        JOptionPane.showMessageDialog(rootPane,"Device price must be above 50,000 and below 1,00,001\n When Warranty is Medium!!","Error",0);
                        return;
                    }
                } else{
                    if(!(num_4 > 100000 && num_4 <= 200000)){
                        JOptionPane.showMessageDialog(rootPane,"Device price must be above 100000 and below 2,00001\n When Warranty is High!","Error",0);
                        return;
                    }
                }
                
                do{
                   p = (String)tbl1.getValueAt(nextRow,0); 
                   if (p != null && p.length() != 0){
                       nextRow++;
                   } else{
                       emptyRowFlag = true;
                   }
                 } while(nextRow < rowCount && !emptyRowFlag);
                
                if (nextRow < rowCount){
                    save = -1;
                    POJO_class obj = new POJO_class(num1,num2,combo_bx, rad_btn, num3, Integer.parseInt(num4), num5);
                    list.add(obj);                             
                    sort(list);
                   
                    
                    int j = 0;     
                    for (POJO_class s:list){
                      String value[] = {s.getNum1(),s.getNum2(),s.getCombo_bx(),s.getRad_btn(),s.getNum3(),Integer.toString(s.getNum4()),s.getNum5()};
                      int colCount = tbl1.getColumnCount();
                      for (int i = 0; i < colCount; i++)
                        tbl1.setValueAt(value[i],j,i);                   
                      j++;
                    }
                                                                           
                }else{
                    JOptionPane.showMessageDialog(rootPane," Data not added to database "+"\n"+" Please delete some rows !! "+"\n"+" No empty row found ","Error",0);
                }
                
               } else if(num_3<1){
                JOptionPane.showMessageDialog(rootPane,"Error...Invalid data input for Quantity","Error",JOptionPane.ERROR_MESSAGE);
               } else if (num_4<1){
                JOptionPane.showMessageDialog(rootPane,"Error...Invalid data input for Price","Error",JOptionPane.ERROR_MESSAGE);
               } else if (num_5<1){
                JOptionPane.showMessageDialog(rootPane,"Error...Invalid data input for Discount","Error",JOptionPane.ERROR_MESSAGE);
               }
               
          
            } else{
                JOptionPane.showMessageDialog(rootPane,"Please do not leave the empty field !!","Error",JOptionPane.ERROR_MESSAGE);
            }
            
        }catch (NumberFormatException e){
            JOptionPane.showMessageDialog(rootPane,"Please do not enter wrong data type !!","Error",0);
        }
     }catch (ArrayIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(rootPane,"Filled data added to database.."+"\n"+" Error..Database contains data more than 15 rows !! "+"\n"+"Only 15 rows has been loaded"+"\n"+" Please delete some rows!!  No more empty row found !! ","Error",0);
     }
     
        
        
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        // TODO add your handling code here:
        // code for clear button 
        txt1.setText(" ");
        txt2.setText(" ");
        txt3.setText(" ");
        txt4.setText(" ");
        txt5.setText(" ");        
        com_box.setSelectedIndex(0);
        rad_btn = "Low (Six Months)";
        combo_bx = "Speaker";
        rad1.setSelected(true);
        
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        // TODO add your handling code here:
        // code for exit button
        if (save == 1){
            JFrame frame = new JFrame("EXIT");
            if(JOptionPane.showConfirmDialog(frame,"Do you want to exit ??","EXIT",
                    JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION)
            { 
                System.exit(0);
            } else{
              
            }
        } else{
            JFrame frame1 = new JFrame("SAVE");
            if(JOptionPane.showConfirmDialog(frame1,"Do you want to save the data ??","SAVE",
                    JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION)
            {
        
            
            
                            JFileChooser fileChooser = new JFileChooser();                                                                   
                            fileChooser.setDialogTitle("Specify a file save");
                            int userSelection = fileChooser.showSaveDialog(this);
                            if(userSelection == JFileChooser.APPROVE_OPTION){
                                        try {
                                            save = 1; 
                                            File file = fileChooser.getSelectedFile();

                                                        if (!file.isFile()){
                                                            file.createNewFile();
                                                        }
                                                        FileWriter wr = new FileWriter(file);
                                                        for (POJO_class s:list){
                                                            String value[] = {s.getNum1(),s.getNum2(),s.getCombo_bx(),s.getRad_btn(),s.getNum3(),Integer.toString(s.getNum4()),s.getNum5()};
                                                            for (int i = 0; i < value.length;i++){
                                                              wr.append(value[i]);
                                                              if (i == value.length-1){
                                                                  break;
                                                              }
                                                              wr.append(",");
                                                            }
                                                            wr.append("\n");
                                                        }
                                                        wr.flush();
                                                        wr.close();

                                        } catch (IOException ex) {
                                                Logger.getLogger(AppliancesInfo.class.getName()).log(Level.SEVERE, null, ex);
                                        }  JOptionPane.showMessageDialog(rootPane,"Successfully saved !!","info",1); 
                            } else{
                                  
                            }
            } else{
                     JFrame frame = new JFrame("EXIT");
                     if(JOptionPane.showConfirmDialog(frame,"Do you want to exit ??","EXIT",
                             JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION)
                     { 
                         System.exit(0);
                     } else{
                          
                     } 
                     }
        }                   
    }//GEN-LAST:event_btn5ActionPerformed

    private void itm3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm3ActionPerformed
        // TODO add your handling code here:
        // code for exit item 
        if (save == 1){
            JFrame frame = new JFrame("EXIT");
            if(JOptionPane.showConfirmDialog(frame,"Do you want to exit ??","EXIT",
                    JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION)
            { 
                System.exit(0);
            } else{
               
            }
        }
        else{
            
            JFrame frame1 = new JFrame("SAVE");
            if(JOptionPane.showConfirmDialog(frame1,"Do you want to save the data ??","SAVE",
                    JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION)
            { 
                            JFileChooser fileChooser = new JFileChooser();                                                                 
                            fileChooser.setDialogTitle("Specify a file save");
                            int userSelection = fileChooser.showSaveDialog(this);
                            if(userSelection == JFileChooser.APPROVE_OPTION){
                                        try {
                                            save = 1; 
                                            File file = fileChooser.getSelectedFile();

                                                        if (!file.isFile()){
                                                            file.createNewFile();
                                                        }
                                                        FileWriter wr = new FileWriter(file);
                                                        for (POJO_class s:list){
                                                            String value[] = {s.getNum1(),s.getNum2(),s.getCombo_bx(),s.getRad_btn(),s.getNum3(),Integer.toString(s.getNum4()),s.getNum5()};
                                                            for (int i = 0; i < value.length;i++){
                                                              wr.append(value[i]);
                                                              if (i == value.length-1){
                                                                  break;
                                                              }
                                                              wr.append(",");
                                                            }
                                                            wr.append("\n");
                                                        }
                                                        wr.flush();
                                                        wr.close();

                                        } catch (IOException ex) {
                                                Logger.getLogger(AppliancesInfo.class.getName()).log(Level.SEVERE, null, ex);
                                        }  JOptionPane.showMessageDialog(rootPane,"Successfully saved !!","info",1); 
                            } else{
                                        
                            }
   
                
         } else{
                     JFrame frame = new JFrame("EXIT");
                     if(JOptionPane.showConfirmDialog(frame,"Do you want to exit ??","EXIT",
                             JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION)
                     { 
                         System.exit(0);
                     } else{
                          
                     } 
                     }
       }
    }//GEN-LAST:event_itm3ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void itm4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm4ActionPerformed
        // TODO add your handling code here:
        // code for FAQ item
        try{
            File faqFile = new File("FAQ.txt");
            try {
                if (!(Desktop.isDesktopSupported())){
                    JOptionPane.showMessageDialog(rootPane,"Error...Desktop is unsupported !!","Error",0);                    
                }else{
                    Desktop.getDesktop().open(faqFile);
                }
            } catch (IOException ex) {
                Logger.getLogger(AppliancesInfo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }catch (Exception e){
            JOptionPane.showMessageDialog(rootPane,"Please update the system version "+" \n " + " Thank you !! ","INFO",1 );
        }
        
    }//GEN-LAST:event_itm4ActionPerformed

    private void txt5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt5ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txt5ActionPerformed

    private void txt5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt5KeyTyped
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txt5KeyTyped

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        // TODO add your handling code here:
        // code for searching gadget based on the price
        try{          
            String num6 = txt6.getText().trim();            
            if (!num6.isEmpty()){
               int num_6 = Integer.parseInt(num6);
               if(num_6 > 0){
                   
                  int index = binarySearch(list,0,list.size()-1,num_6);
                  if (index == -1){
                      JOptionPane.showMessageDialog(rootPane,"Sorry no item found in that price!!","Error",0);
               
                  }else{
                      JOptionPane.showMessageDialog(rootPane,"\n Gadget ID : "+list.get(index).getNum1()
                      +"\n Gadget Name : "+list.get(index).getNum2()+"\n Category : "+list.get(index).getCombo_bx()+"\n Warrenty : "+list.get(index).getRad_btn()
                      +"\n Quantity : "+list.get(index).getNum3()+"\n Price (NRS) : "+list.get(index).getNum4()+"\n Discount(%) : "+list.get(index).getNum5(),"OUTPUT : ",JOptionPane.INFORMATION_MESSAGE);
                  }
                  
                  
               } else{
                  JOptionPane.showMessageDialog(rootPane,"Invalid data entered !!","Error",0);
               } 
            }else{
                JOptionPane.showMessageDialog(rootPane,"Empty field found !!","Error",0);           
            }
                
            
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(rootPane,"Please enter number like 1,2,3...","Error",0);
        }
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        // TODO add your handling code here:
        // linear search algorithm
       int multiple = 0;
       String multi = "";
       String combo_bx1 = (String) com_box1.getSelectedItem();
       for(POJO_class r:list){
           if(r.getCombo_bx().equals(combo_bx1)){
                //multiple = multiple + 1;
                multiple = multiple + Integer.parseInt(r.getNum3());
                multi = multi + "\n Gadget Name : " +r.getNum2()+"-->"+"Available quantity = "+(Integer.parseInt(r.getNum3()));
               
           }
       }
       if(multiple == (0)){
           JOptionPane.showMessageDialog(rootPane,"No any gadget in the searched category!!","Error",0);
       } else{
           JOptionPane.showMessageDialog(rootPane,"There are total "+multiple+" gadget in "+combo_bx1+" Category and they are "+ "\n"+multi);
       }                  
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        // TODO add your handling code here: 
        // code for clear table
            int rowCount = tbl1.getRowCount();
            int colCount = tbl1.getColumnCount();
            for (int j = 0;j<rowCount;j++){    
                String value[] = {"","","","","","",""};           
                for (int i = 0; i < colCount; i++)
                      tbl1.setValueAt(value[i],j,i);                   
            }             
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        // TODO add your handling code here:
        // code for deleting data
       try{
        try{
                      int indexOfSelectRow = tbl1.getSelectedRow();
                      String selectedRow = (String)tbl1.getValueAt(indexOfSelectRow,0);


                      for (int i = 0; i < list.size(); i++){
                          POJO_class pc = list.get(i);
                          if(pc.getNum1().equals(selectedRow)){
                              list.remove(pc);

                          }
                      }

                      if (selectedRow != null && selectedRow.length() != 0){
                          int colCount = tbl1.getColumnCount();              
                          String value[] = {"","","","","","",""};           
                          for (int i = 0; i < colCount; i++){
                              tbl1.setValueAt(value[i],indexOfSelectRow,i);                   
                          }
                          JOptionPane.showMessageDialog(rootPane,"Successfully deleted !!","Info",1);
                      } else{
                          JOptionPane.showMessageDialog(rootPane, "Invalid row ( row having no data ) has been selected..", "ERROR", 0);              
                      }                      
        }catch( ArrayIndexOutOfBoundsException exp){
            JOptionPane.showMessageDialog(rootPane, "Error..Please select row", "ERROR", 0);
        }
       }catch(NullPointerException exp){
                JOptionPane.showMessageDialog(rootPane, "Error..Please select row", "ERROR", 0);     
        }
                  
                                          
    }//GEN-LAST:event_btn8ActionPerformed

    private void itm2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm2ActionPerformed
        // TODO add your handling code here: 
        // code for saving the data
           if (save != 1){
                  
                    JFileChooser fileChooser = new JFileChooser();                      
                    fileChooser.setDialogTitle("Specify a file save");
                    int userSelection = fileChooser.showSaveDialog(this);
                  
                    if(userSelection == JFileChooser.APPROVE_OPTION){
                        try {
                                save = 1;
                                File file = fileChooser.getSelectedFile();

                                        if (!file.isFile()){
                                            file.createNewFile();
                                        }
                                        FileWriter wr = new FileWriter(file);
                                        for (POJO_class s:list){
                                            String value[] = {s.getNum1(),s.getNum2(),s.getCombo_bx(),s.getRad_btn(),s.getNum3(),Integer.toString(s.getNum4()),s.getNum5()};
                                            for (int i = 0; i < value.length;i++){
                                              wr.append(value[i]);
                                              if (i == value.length-1){
                                                  break;
                                              }
                                              wr.append(",");
                                            }
                                            wr.append("\n");
                                        }
                                        wr.flush();
                                        wr.close();

                        } catch (IOException ex) {
                                Logger.getLogger(AppliancesInfo.class.getName()).log(Level.SEVERE, null, ex);
                        }  JOptionPane.showMessageDialog(rootPane,"Successfully saved !!","info",1); 
                    } else{
                    }}else{
               JOptionPane.showMessageDialog(rootPane,"File already saved !!","INFO",1);
           }
        

    }//GEN-LAST:event_itm2ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        // TODO add your handling code here:
        // code to clear the search button
        com_box1.setSelectedIndex(0);
        combo_bx1 = "Laptop";
        txt6.setText(" ");
    }//GEN-LAST:event_btn6ActionPerformed

    private void itm5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm5ActionPerformed
        // TODO add your handling code here:
        // code for userManual item
        try{
            File faqFiles = new File("userManual.pdf");
            try {
                if (!(Desktop.isDesktopSupported())){
                    JOptionPane.showMessageDialog(rootPane,"Error...Desktop is unsupported !!","Error",0);                    
                }else{
                    Desktop.getDesktop().open(faqFiles);
                }
            } catch (IOException ex) {
                Logger.getLogger(AppliancesInfo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }catch (Exception e){
            JOptionPane.showMessageDialog(rootPane,"Please update the system version "+" \n " + " Thank you !! ","INFO",1 );
        }
    }//GEN-LAST:event_itm5ActionPerformed

    private void itm6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm6ActionPerformed
        // TODO add your handling code here:
        // code for open menuItem
            JFileChooser fileChooser = new JFileChooser();
            FileNameExtensionFilter filter_1 = new javax.swing.filechooser.FileNameExtensionFilter("Text Files", "txt");
            FileNameExtensionFilter filter_2 = new javax.swing.filechooser.FileNameExtensionFilter("CSV File", "csv");
            fileChooser.setFileFilter(filter_1);
            fileChooser.setFileFilter(filter_2);
            int data = fileChooser.showOpenDialog(null);
            File fc = fileChooser.getSelectedFile();
            try{
                if (data == JFileChooser.APPROVE_OPTION){
                    String filePath = fc.getAbsolutePath();           
                    filePath = filePath.replace('\\','/');
                    File open = new File(filePath);
                    if (Desktop.isDesktopSupported()){
                        Desktop.getDesktop().open(open);
                    }else{
                        JOptionPane.showMessageDialog(rootPane,"Desktop is Unsupported","Error",0);
                    }
                }
            }catch (Exception e){
                JOptionPane.showMessageDialog(rootPane, "Error","Error",0);
            }
    }//GEN-LAST:event_itm6ActionPerformed
    // selection sort algorithm 
    public void sort(ArrayList<POJO_class> num4){
        for(int i = 0; i < list.size() - 1;i++){
            int minPos = i;
            for(int j = i + 1; j < list.size(); j++){
                if(list.get(minPos).getNum4() > list.get(j).getNum4()){
                    minPos = j; 
                }
            }
            Collections.swap(list,minPos, i);
        }       
    }
    //binarySearch algorithm
    public static int binarySearch(ArrayList<POJO_class>list,int low, int high, int num_6){
        if(low<=high){
            int mid = (low+high)/2;
            if(list.get(mid).getNum4() == num_6){
                return mid;
            } else if (list.get(mid).getNum4() > num_6){
                return binarySearch(list,low,mid-1,num_6);
            } else{
                return binarySearch(list,mid+1,high,num_6);
            }
        } else {
            return -1;
        }
    }
               
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppliancesInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu.Separator Sep1;
    private javax.swing.JPopupMenu.Separator Sep2;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.ButtonGroup btn_grp;
    private javax.swing.JComboBox<String> com_box;
    private javax.swing.JComboBox<String> com_box1;
    private javax.swing.JMenuItem itm1;
    private javax.swing.JMenuItem itm2;
    private javax.swing.JMenuItem itm3;
    private javax.swing.JMenuItem itm4;
    private javax.swing.JMenuItem itm5;
    private javax.swing.JMenuItem itm6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl10;
    private javax.swing.JLabel lbl11;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl3;
    private javax.swing.JLabel lbl4;
    private javax.swing.JLabel lbl5;
    private javax.swing.JLabel lbl6;
    private javax.swing.JLabel lbl7;
    private javax.swing.JLabel lbl8;
    private javax.swing.JLabel lbl9;
    private javax.swing.JMenuBar menuBar1;
    private javax.swing.JPanel pnl1;
    private javax.swing.JPanel pnl2;
    private javax.swing.JPanel pnl3;
    private javax.swing.JPanel pnl4;
    private javax.swing.JRadioButton rad1;
    private javax.swing.JRadioButton rad2;
    private javax.swing.JRadioButton rad3;
    private javax.swing.JPopupMenu.Separator sep3;
    private javax.swing.JPopupMenu.Separator sep4;
    private javax.swing.JTable tbl1;
    private javax.swing.JTextField txt1;
    private javax.swing.JTextField txt2;
    private javax.swing.JTextField txt3;
    private javax.swing.JTextField txt4;
    private javax.swing.JTextField txt5;
    private javax.swing.JTextField txt6;
    // End of variables declaration//GEN-END:variables
}
